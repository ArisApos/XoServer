{"version":3,"sources":["TicToe/Game/Board.js","libs/actionCreactor.js","libs/calculateWinner.js","libs/dispatchAll.js","libs/createGameId.js","models/tic-tac-toe/reducers.js","models/tic-tac-toe/actions.js","models/tic-tac-toe/actionFunctions.js","TicToe/Game/Square.js","TicToe/Game/Game.js","TicToe/Game/TotalScore.js","TicToe/Game/GameInfo.js","TicToe/Game/Timer.js","TicToe/OffLinePage/Games.js","TicToe/OffLinePage/GamesMenu.js","TicToe/OffLinePage/OffLinePage.js","models/onLine/libs/indexing.js","models/onLine/libs/sockets.js","models/onLine/libs/axiosApi.js","TicToe/OnLinePage/ControlPanel/Ranks.js","TicToe/OnLinePage/ControlPanel/MyStatus.js","models/onLine/actionTypes.js","models/onLine/actions.js","TicToe/OnLinePage/Common/useServerNotification.js","TicToe/OnLinePage/ControlPanel/Registration.js","TicToe/OnLinePage/ControlPanel/Loggin.js","TicToe/OnLinePage/ControlPanel/TimeRoom.js","TicToe/OnLinePage/ControlPanel/LiveOverview.js","TicToe/OnLinePage/ControlPanel/ControlPanel.js","TicToe/OnLinePage/Games/Game.js","TicToe/OnLinePage/Games/Games.js","models/onLine/reducers.js","models/onLine/sagaChannels.js","models/onLine/sagas.js","TicToe/OnLinePage/OnLinePage.js","TicToe/HomePage.js","serviceWorker.js","index.js"],"names":["node","arr","Array","fill","renderSquareX","x","gameId","map","el","index","react_default","a","createElement","SquareContainer","key","i","paint","classList","toggle","Board","_ref","className","ref","nodeEl","onClick","React","memo","actionCreator","type","_len","arguments","length","argsNames","_key","_len2","args","_key2","action","forEach","argName","calculateWinner","squares","lines","_lines$i","Object","slicedToArray","b","c","winner","winnerLine","dispatchAll","dispatch","actions","getGameId","id","createGameId","gameSettingsState","state","undefined","objectWithoutProperties","stepNumberState","step","xIsNextState","xTurn","squaresState","input","slice","historyState","concat","toConsumableArray","scoreState","X","O","objectSpread","defineProperty","playerXO","points","gameStatusState","stepNumber","xIsNext","history","score","winnerResults","history2","winnerResults2","gameSettings","addSquare_A","changeXIsNext_A","changeStepNumber_A","cut_A","addNewGame_A","losePoints_A","connect","_ref2","ownProps","_games$ownProps$gameI","games","squareValue","squareHandler","addSquare","changeXIsNext","oldStepNumber","changeStepNumber","winnerSquer","some","location","GameContainer","_games$ownProps$gameI2","playerXName","playerOName","timeLimmit","historyLength","timeTravelDis","cutDis","cut","losePointsDis","losePoints","Board_Board","GameInfo_GameInfo","TotalScore_TotalScore","Timer_Timer","scoreAnimation","nodeHeader","add","setTimeout","remove","TotalScore","GameInfo","moves","nullEl","move","desc","style","zIndex","transform","onMouseEnter","status","Timer","_useState","useState","_useState2","clock","setClock","useEffect","idTickTock","timeLimmitSeconds","tickInterval","firstCall","setInterval","countDownValue","clearInterval","tickPersentage","color","timerClassName","GamesContainer","gamesIds","keys","addNewGameDis","_ref3","newGameId","addNewGame","addNewGameDisUCB","useCallback","data","gameContainers","Fragment","GamesMenu_GamesMenu","assign","GamesMenu","menuVisible","setMenuVisible","_useForm","useForm","register","handleSubmit","errors","onSubmit","newGameOptions","name","placeholder","required","pattern","OffLinePageContainer","indexing","console","log","Error","find","obj","reduce","acc","cur","err","error","message","ENTRY_POINT","createSocketConnection","asyncToGenerator","regenerator_default","mark","_callee","nameSpace","url","socket","wrap","_context","prev","next","socketIOClient","Promise","resolve","on","socketData","abrupt","sent","stop","_x","apply","this","axiosApi","endpoint","headers","_ref$method","method","token","URIparameters","values","encodeURIComponent","encodedUri","Authorization","AxiosParameters","push","axios","then","res","catch","response","Ranks","_useSelector","useSelector","players","online","enemies","enemyName","rankingPlayers","avatar","enemy","src","alt","MyStatus","myStatus","logout","setActiveWindows","maxPlayers","maxTime","registration","mountRegistration","loggin","mountLoggin","GET_PLAYER_REQUESTED","POST_PLAYER_REQUESTED","LOGOUT","UPDATE_PLAYERS_ONLINE","CREATE_GAME","UPDATE_GAME","setPlayerLoggedStatus","setPlayerStatus","setPlayers","setServerNotification","getPlayerRequested","postPlayerRequested","setSocket","createGame","useServerNotification","serverNotification","shallowEqual","utilities","requesting","success","useDispatch","Loader","Message","setServerNotificationD","count","Registration","reset","_useServerNotificatio","file","password","requestedData","setRequestedData","cb","goLogginDiv","formData","FormData","dataKey","append","files","content-type","onChange","e","target","Loggin","TimeRoom","roomPlayers","onClickPlayer","tPlayers","data-key","LiveOverview","myPlayerName","player","onlinePlayers","groupByMaxTimePlayers","groupBy","player1","player2","getAttribute","timeRooms","ControlPanel","ranks","activeWindows","Ranks_Ranks","MyStatus_MyStatus","loggedStatus","loggedIn","Registration_Registration","Loggin_Loggin","LiveOverview_LiveOverview","Game","myName","turn","_ref$winnerData","winnerData","clearTimeout","onClickSquare","innerText","squareIndex","emit","cs","root","firstPlayerClassName","secondPlayerClassName","playerState","data-squareindex","Games","gamesEls","game","Games_Game_Game","combineReducers","payload","clear","newState","playerName","watchSocketServer","watchSocketServerGame","createSocketChannel","ss","eventChannel","_createGame","UPDATE_PLAYERS","socketChannel","_yield$take","_context2","call","take","put","t0","_marked","createSocketChannelGame","socketChannelGame","_yield$take2","_context3","_marked2","getPlayer","watchGetPlayer","postPlayer","watchPostPlayer","createWatcherChanelGame","rootSaga","_yield$call","_yield$all","_yield$all2","allPlayers","_message","all","fork","sagas_marked","takeLatest","sagas_marked2","_yield$call2","_message2","logginSuccess","_marked3","_context4","_marked4","_context5","select","MANULLY_DISCONNECT","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","OnLinePageContainer","_ref2$online","ControlPanel_ControlPanel","Games_Games_Games","HomePageContainer","react_router_dom","react_router","exact","path","to","component","Boolean","window","hostname","match","sagaMiddleware","createSagaMiddleware","fullReducer","newGameInitialState","activeGameStatus","newActiveGameStatus","gameStore","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","es","store","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.94390e08.chunk.js","sourcesContent":["import React from 'react'\r\nimport { SquareContainer } from './'\r\n\r\nconst arr = Array(3).fill(null),\r\n      renderSquareX = (x,gameId) => arr.map((el, index) => <SquareContainer key={index+x} gameId={gameId} i={index + x} /> ),\r\n      paint = ()=>{ node.classList.toggle(\"mystyle\") }\r\n\r\nlet node;// We use the initializing way for demonstration purposes\r\n\r\nlet Board = ({gameId})=>{\r\n    return (\r\n      <div className=\"gameBoard\">\r\n        <div\r\n          ref={nodeEl => { if(nodeEl) node = nodeEl; }}\r\n          onClick={paint}\r\n          className=\"boardRow\"\r\n        >\r\n          {renderSquareX(0,gameId)}\r\n        </div>\r\n        <div className=\"boardRow\">{renderSquareX(3,gameId)}</div>\r\n        <div className=\"boardRow\">{renderSquareX(6, gameId)}</div>\r\n      </div>\r\n    );\r\n}\r\nBoard = React.memo(Board);\r\nexport { Board }\r\n// export { Board, node, paint } we can pas functions, elements, from Component=>Component with export like the props ","const actionCreator = (type, ...argsNames) => (...args) => {\r\n    const action = { type }\r\n    argsNames.forEach((argName, index) => { action[argName] = args[index] })\r\n    return action;\r\n}\r\nexport {actionCreator}\r\n\r\n\r\n\r\n","//squares has all the x,o,nu.   Is array with length of 9\r\n//Returns object with results(null,x,o) and lines(position of the winner array with length of 3)\r\nconst calculateWinner = (squares)=>{\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    //We love functional programming but in this case for is better(faster for big calc and brakes)\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            //We have a winner=>squares[a]=squares[b]=squares[c] in the position of lines[0],lines[1],lines[2]\r\n            return { winner:squares[a], winnerLine:lines[i] }\r\n        }\r\n    }\r\n    //We dont have a winner case\r\n    return { winner: null, winnerLine:null };\r\n}\r\n\r\nexport { calculateWinner }","const dispatchAll = (dispatch, ...actions) => actions.forEach(action => dispatch(action))\r\n\r\nexport { dispatchAll }","const createGameId =()=>{\r\n    let id=0;\r\n    return ()=>id++\r\n}\r\nconst getGameId = createGameId();\r\n\r\nexport { getGameId };","import { calculateWinner } from '../../libs'\r\nimport { ADD_SQUARE , CUT, CHANGE_STEP, CHANGE_XISNEXT, ADD_NEW_GAME, LOSE_POINTS } from './actions'\r\n\r\nconst gameSettingsState = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_GAME:\r\n            const { type, gameId, ...newGameSettings } = action;\r\n            return newGameSettings;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst stepNumberState = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP:\r\n      return action.step;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst xIsNextState = (state = true, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_XISNEXT:\r\n      return action.xTurn;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst squaresState = (state = Array(9).fill(null), action) => {\r\n    switch (action.type){\r\n        case ADD_SQUARE:\r\n        state[action.index] = action.input\r\n        return  state.slice();\r\n    default: return state;\r\n    }\r\n}\r\n\r\nconst historyState = (state = [{ squares:squaresState(undefined, {}) }], action) => {\r\n    switch (action.type) {\r\n        case ADD_SQUARE:\r\n            return [...state.slice(0, action.step + 1), {squares:squaresState(state[action.step].squares.slice(), action)}]\r\n        case CUT:\r\n            return [...state.slice(0, action.step + 1)]\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst scoreState = (state = { X: 0, O: 0 }, action) => {\r\n      switch (action.type) {\r\n        case LOSE_POINTS:\r\n            return {...state, [action.playerXO]:state[action.playerXO]-action.points}\r\n        default: return state\r\n    }\r\n};\r\n\r\nconst gameStatusState = (state = { \r\n    stepNumber: stepNumberState( undefined, {}),\r\n    xIsNext: xIsNextState(undefined, {}), \r\n    history: historyState(undefined, {}), \r\n    score: scoreState(undefined, {}), \r\n    winnerResults: { winner: null, winnerLine: null } }, action ) => {\r\n    switch (action.type) {\r\n        case ADD_SQUARE:\r\n            const history = historyState(state.history.slice(), action);\r\n            const winnerResults = calculateWinner(history[history.length - 1].squares.slice());\r\n            const score = winnerResults.winner ? { ...state.score, [winnerResults.winner]: state.score[winnerResults.winner] +1  } : { ...state.score }\r\n            return {...state, history, score, winnerResults };\r\n        case CUT:\r\n            const history2 = historyState(state.history.slice(), action);\r\n            const winnerResults2 = calculateWinner(history2[history2.length - 1].squares.slice());\r\n            return { ...state, history:history2, winnerResults:winnerResults2 }\r\n        case CHANGE_XISNEXT:\r\n            return { ...state, xIsNext: xIsNextState(state.xIsNext, action) };\r\n        case CHANGE_STEP:\r\n            return { ...state, stepNumber: stepNumberState(state.stepNumber, action) }\r\n        case ADD_NEW_GAME:\r\n            return { ...state, gameSettings: gameSettingsState( {}, action) }\r\n        case LOSE_POINTS:\r\n            return { ...state, score: scoreState(state.score, action) }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst games = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_GAME:\r\n        const newGameInitialState = { [action.newGameId]: gameStatusState(undefined, action) };\r\n      return { ...state, ...newGameInitialState };\r\n    case ADD_SQUARE:\r\n    case CUT:\r\n    case CHANGE_XISNEXT:\r\n    case CHANGE_STEP:\r\n    case LOSE_POINTS:\r\n      //Find gameState of the game who sends the action by gameId\r\n      const activeGameStatus = state[action.gameId];\r\n      //Parse the oldActiveGameStatusState and the action and get the new State\r\n      const newActiveGameStatus = gameStatusState(activeGameStatus, action);\r\n      //Overide only the specific game state\r\n      return { ...state, [action.gameId]: newActiveGameStatus };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { games };\r\n\r\n\r\n","const ADD_SQUARE = 'ADD_SQUARE';\r\nconst CUT = 'CUT';\r\nconst CHANGE_STEP = 'CHANGE_STEP';\r\nconst CHANGE_XISNEXT = 'CHANGE_XISNEXT';\r\nconst ADD_NEW_GAME = 'ADD_NEW_GAME';\r\nconst LOSE_POINTS = \"LOSE_POINTS\";\r\nconst CREATE_GAME = \"CREATE_GAME\";\r\n\r\nexport {\r\n  ADD_SQUARE,\r\n  CUT,\r\n  CHANGE_STEP,\r\n  CHANGE_XISNEXT,\r\n  ADD_NEW_GAME,\r\n  LOSE_POINTS,\r\n  CREATE_GAME\r\n};","import { actionCreator } from '../../libs/actionCreactor'\r\nimport {\r\n  ADD_SQUARE,\r\n  CHANGE_STEP,\r\n  CHANGE_XISNEXT,\r\n  CUT,\r\n  ADD_NEW_GAME,\r\n  LOSE_POINTS\r\n} from \"./actions\";\r\n\r\nconst addSquare_A = actionCreator(ADD_SQUARE, 'gameId','index', 'input', 'step');\r\nconst changeXIsNext_A = actionCreator(CHANGE_XISNEXT, 'gameId', 'xTurn');\r\nconst changeStepNumber_A = actionCreator(CHANGE_STEP,  'gameId','step');\r\nconst cut_A = actionCreator(CUT, 'gameId', 'step');\r\nconst addNewGame_A = actionCreator(ADD_NEW_GAME, 'newGameId','playerXName', 'playerOName', 'timeLimmit');\r\nconst losePoints_A = actionCreator(LOSE_POINTS, 'gameId', 'playerXO', 'points');\r\n\r\nexport {\r\n  addSquare_A,\r\n  changeXIsNext_A,\r\n  changeStepNumber_A,\r\n  cut_A,\r\n  addNewGame_A,\r\n  losePoints_A\r\n};","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addSquare_A, changeXIsNext_A, changeStepNumber_A} from '../../models/tic-tac-toe/'\r\nimport { dispatchAll } from '../../libs'\r\n\r\n//Helper actionFunctions\r\nconst addSquare = (gameId, index, xIsNext, stepNumber)=>{\r\n  let input = xIsNext ? 'X':'O' \r\n  return addSquare_A(gameId, index, input, stepNumber)\r\n};\r\nconst changeXIsNext = (gameId, xIsNext)=> changeXIsNext_A(gameId, !xIsNext);\r\nconst changeStepNumber = (gameId, oldStepNumber)=>changeStepNumber_A(gameId, oldStepNumber + 1);\r\n\r\n//ComponentUI\r\nconst Square = ({gameId, i, squareValue, xIsNext, stepNumber, squareHandler, winner, winnerLine})=>{\r\n  const winnerSquer = winner && winnerLine.some(location => location === i);\r\n  const onClickSquare = ()=>winner || squareValue ? 1 : squareHandler(gameId, i, xIsNext, stepNumber);\r\n\r\n  //Future Need  useEffect(() => {}, [gameId]);\r\n\r\n  return (\r\n    <button onClick={ onClickSquare }\r\n      className={ winnerSquer ? \"squareW squareA square\" \r\n        : winner ?'squareA square' : 'square'\r\n      }>\r\n      { squareValue }\r\n    </button>\r\n  );\r\n}\r\n\r\n//Redux\r\nconst stateSquare = ({ games }, ownProps) => {\r\n  // CURRENT GAME\r\n const { history, winnerResults, xIsNext, stepNumber } = games[ownProps.gameId] \r\n return {\r\n          squareValue: history[stepNumber].squares[ownProps.i],\r\n          xIsNext,\r\n          stepNumber,\r\n          winner: winnerResults.winner && stepNumber === history.length-1 ? winnerResults.winner : null,\r\n          winnerLine: winnerResults.winnerLine\r\n         }\r\n}\r\n\r\nconst dispatchSquare = dispatch => ({\r\n  squareHandler: (gameId, input, xIsNext, stepNumber) => {\r\n    dispatchAll(dispatch,\r\n      addSquare(gameId, input, xIsNext, stepNumber),\r\n      changeXIsNext(gameId, xIsNext),\r\n      changeStepNumber(gameId, stepNumber)\r\n    )\r\n  }\r\n})\r\n\r\nconst SquareContainer = connect(stateSquare, dispatchSquare)(Square)\r\nexport { SquareContainer }","import React from 'react'\r\nimport { Board, TotalScore, GameInfo, Timer } from './'\r\nimport { connect } from 'react-redux'\r\nimport { changeXIsNext_A, changeStepNumber_A, cut_A, losePoints_A } from '../../models/tic-tac-toe/'\r\nimport { dispatchAll } from '../../libs'\r\nimport './Static/game.scss';\r\n\r\n//actionFunctions functions\r\nconst changeXIsNext = (gameId, step) => changeXIsNext_A(gameId, step % 2 === 0);\r\nconst changeStepNumber = (gameId, step) => changeStepNumber_A(gameId, step);\r\nconst cut = (gameId, step) => cut_A(gameId, step);\r\nconst losePoints = (gameId, playerXO, points) => losePoints_A(gameId, playerXO, points);\r\n\r\n//Component\r\nconst Game = ({\r\n  gameId, score, winner, historyLength, xIsNext, timeTravelDis, cutDis, stepNumber,\r\n  playerOName, playerXName, timeLimmit, losePointsDis }) => {\r\n    return (\r\n      <div className=\"game\">\r\n        <Board { ...{gameId}  }/>\r\n        <GameInfo { ...{gameId, historyLength, stepNumber, cutDis, timeTravelDis, winner, xIsNext } } />\r\n        <TotalScore { ...{ playerXName, playerOName, winner, score } } />\r\n        <Timer { ...{ gameId, timeLimmit, xIsNext, losePointsDis } } />\r\n      </div>\r\n    );\r\n}\r\n\r\n//ReduxState&Dispatch\r\nconst stateGame = ({ games }, ownProps) => {\r\n  const { gameSettings: {\r\n           playerXName, \r\n           playerOName, \r\n           timeLimmit,\r\n          },\r\n           xIsNext, stepNumber, score, history, winnerResults } = games[ownProps.gameId];\r\n  return {\r\n    winner: winnerResults.winner && stepNumber === history.length - 1 ? winnerResults.winner : null,\r\n    historyLength: Array(history.length).fill(null),\r\n    xIsNext,\r\n    stepNumber,\r\n    score,\r\n    playerXName,\r\n    playerOName,\r\n    timeLimmit\r\n  };\r\n};\r\n\r\nconst dispatchGame = dispatch => ({\r\n    timeTravelDis: (gameId, step) => {\r\n        dispatchAll(dispatch,\r\n            changeXIsNext(gameId, step),\r\n            changeStepNumber(gameId, step))\r\n    },\r\n    cutDis: (gameId, step) => { dispatch(cut(gameId, step)) },\r\n    losePointsDis: (gameId, playerXO, points) => { dispatch(losePoints(gameId, playerXO, points)) }\r\n})\r\nconst GameContainer = connect(stateGame, dispatchGame)(Game)\r\nexport { GameContainer }","import React from \"react\";\r\n\r\nconst scoreAnimation = nodeHeader => {\r\n  nodeHeader.classList.add(\"scoreRotation\");\r\n  setTimeout(() => nodeHeader.classList.remove(\"scoreRotation\"), 2000);\r\n};\r\n\r\nlet TotalScore = ( { playerXName, playerOName, winner, score } ) => {\r\n return <div className=\"totalScore\">\r\n          <span className=\"headerName\">{playerXName}</span>\r\n          <span className=\"headerName\">{playerOName}</span>\r\n          <span className=\"header\">X</span>\r\n          <span className=\"header\">O</span>\r\n          <span className=\"xi\" ref={nodeEl => {\r\n              if (winner === \"X\" && nodeEl) {\r\n                scoreAnimation(nodeEl);\r\n              }}}>\r\n            {score.X}\r\n          </span>\r\n          <span className=\"omikron\" ref={nodeEl => {\r\n              if (winner === \"O\" && nodeEl) {\r\n                scoreAnimation(nodeEl);\r\n              }}}>\r\n            {score.O}\r\n          </span>\r\n        </div>;\r\n}\r\n\r\nTotalScore = React.memo(TotalScore);\r\n\r\nexport { TotalScore };","import React from \"react\";\r\n\r\nconst GameInfo = ({gameId, historyLength, stepNumber, cutDis, timeTravelDis, winner, xIsNext })=> {\r\n        const moves = historyLength.map((nullEl, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        return <li key={move}>\r\n            <button\r\n                ref={nodeEl => {\r\n                    if (move === stepNumber && nodeEl) {\r\n                        nodeEl.style.zIndex = 1\r\n                            setTimeout(function () {\r\n                                nodeEl.style.transform = \"translate(0,10px)\";\r\n                                nodeEl.style.zIndex = 0;\r\n                            }, 100)         \r\n                    }\r\n                }}\r\n                className={stepNumber === move ? 'travel current' : 'travel'}\r\n                onClick={() => { cutDis(gameId, move); }} onMouseEnter={() => timeTravelDis(gameId, move)}>\r\n                {desc}\r\n            </button>\r\n        </li>;\r\n    });\r\n    let status = winner ? \"Winner: \" + winner : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n\r\n    return <div className=\"gameInfo\">\r\n              <div className={winner ? \"status winner\" : \"status\"}>\r\n                {status}\r\n              </div>\r\n              <ol>{moves}</ol>\r\n            </div>;\r\n\r\n}\r\n\r\nexport { GameInfo }","import React, { useState, useEffect } from \"react\"\r\n\r\n\r\nconst Timer = ({ gameId, timeLimmit, xIsNext, losePointsDis }) => {\r\n  const [clock, setClock] = useState(timeLimmit / 1000);\r\n\r\n  const timerClassName = (clock) => {\r\n    const tickPersentage = clock / (timeLimmit / 1000);\r\n    switch (true) {\r\n      case tickPersentage > 0.75:\r\n        return { color: \"green\" };\r\n      case tickPersentage > 0.5:\r\n        return { color: \"yellow\" };\r\n      case tickPersentage > 0.25:\r\n        return { color: \"orange\" };\r\n      case tickPersentage >=0 :\r\n        return { color: \"red\" };\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const losePoints = (firstCall, countDownValue) => {\r\n    if (!firstCall && countDownValue === 0) {\r\n      const plyaerXO = xIsNext ? \"X\" : \"O\";\r\n      losePointsDis(gameId, plyaerXO, 0.5);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let timeLimmitSeconds = timeLimmit / 1000;\r\n    let tickInterval = 1;\r\n    let firstCall = true;\r\n    let idTickTock;\r\n\r\n    const tickTock = () =>\r\n      setInterval(() => {\r\n          const countDownValue = timeLimmitSeconds - (tickInterval++ % (timeLimmitSeconds+1));\r\n          setClock(countDownValue);\r\n          losePoints(firstCall, countDownValue); \r\n        if (firstCall) firstCall = !firstCall;\r\n      }, 1000);\r\n    idTickTock=tickTock();\r\n    // Specify how to clean up after this effect:\r\n    return ()=>{ clearInterval(idTickTock); setClock(timeLimmit / 1000); };\r\n  }, [xIsNext]);\r\n\r\n  return (\r\n    <span className={xIsNext ? \"timer\" : \"timer oIsNext\"} style={timerClassName(clock)}>\r\n      {clock}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport { Timer }","import React, { useCallback } from \"react\";\r\nimport { GameContainer } from \"../Game\";\r\nimport { GamesMenu } from \".\";\r\nimport { addNewGame_A } from \"../../models/tic-tac-toe\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//actionFunctions functions\r\nconst addNewGame = (gameId, playerXName, playerOName, timeLimmit) => addNewGame_A(gameId, playerXName, playerOName, timeLimmit);\r\n\r\n//Component\r\nconst Games = ({ gamesIds, addNewGameDis }) => {\r\n    const addNewGameDisUCB = useCallback((data) => addNewGameDis(data), []);\r\n    const gameContainers = gamesIds.map(gameId=><GameContainer {...{key:gameId, gameId}} />)\r\n  return (\r\n    <>\r\n      <GamesMenu className=\"gamesMenuu\" {...{ addNewGameDisUCB }} />\r\n      <div className=\"gamesContainer\">{gameContainers}</div>\r\n    </>\r\n  );\r\n};\r\n\r\n//ReduxState&Dispatch\r\nconst stateGame = ({games}) => {\r\n  return { gamesIds: Object.keys(games) };\r\n};\r\n\r\nconst dispatchGame = dispatch => ({ \r\n    addNewGameDis:({newGameId, playerXName, playerOName, timeLimmit})=>{ \r\n      dispatch(addNewGame(newGameId, playerXName, playerOName, timeLimmit)) }\r\n});\r\nconst GamesContainer = connect(stateGame, dispatchGame)(Games);\r\nexport { GamesContainer };\r\n\r\n\r\n//Fast Game\r\n//add dispatch to props via dispatchGame\r\n{/* <div className=\"newGameButton\"style={{ left: \"300px\" }}onClick={() =>dispatch({type: \"ADD_NEW_GAME\",\r\n           newGameId: 0,playerXName: \"aris\",playerOName: \"nina\",timeLimmit: 4000})}/> */}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getGameId } from \"../../libs\";\r\nlet GamesMenu = ({ addNewGameDisUCB }) => {\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n    const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n    const onSubmit = data => {\r\n        const newGameOptions = { newGameId:getGameId(), ...data, timeLimmit:data.timeLimmit*1000 };\r\n        setMenuVisible(false);  \r\n        addNewGameDisUCB(newGameOptions);\r\n    };\r\n    const onClickButton = ()=>setMenuVisible(!menuVisible);  \r\n    \r\n    return (\r\n      <>\r\n        <div className={ menuVisible ? \"newGameButton on\" : \"newGameButton\" } onClick={onClickButton}>\r\n        </div>\r\n        <form\r\n          className={\r\n            menuVisible ? \"gamesMenu menuVisible\" : \"gamesMenu menuHidden\"\r\n          }\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input name=\"playerXName\" placeholder='nameX' ref={register({ required: true, pattern: /^([a-zA-Z0-9_-]){3,5}$/ })} />\r\n          {errors.playerXName && \"nameX is required Please enter Alpanumeric Letters with length 3-5\"}\r\n          <input name=\"playerOName\" placeholder='nameO' ref={register({ required: true, pattern: /^([a-zA-Z0-9_-]){3,5}$/ })} />\r\n          {errors.playerOName && \"nameO is required Please enter Alpanumeric Letters with length 3-5\"}\r\n          <input name=\"timeLimmit\" placeholder='time Limmit(sec)' ref={register({required: true, pattern: /^[2-8]$/ })} />\r\n          {errors.timeLimmit && \"timeLimmit is required Please enter  a  number 2-8\"}\r\n          <input className='submit' type=\"submit\" />\r\n        </form>\r\n      </>\r\n    );\r\n};\r\n\r\nGamesMenu = React.memo(GamesMenu);\r\n\r\nexport  { GamesMenu }","import React from \"react\";\r\nimport { GamesContainer } from \"./\";\r\nimport {} from \"../../models/tic-tac-toe/\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//actionFunctions functions\r\n\r\n//Component\r\nconst OffLinePage = ({ games }) => {\r\n  return (\r\n      <div className=\"offLinePage\">\r\n        <GamesContainer />\r\n      </div>\r\n  );\r\n};\r\n\r\n//ReduxState&Dispatch\r\nconst stateOffLinePage = ({ games }) => {\r\n  return {};\r\n};\r\n\r\nconst dispatchOffLinePage = dispatch => ({});\r\nconst OffLinePageContainer = connect(\r\n  stateOffLinePage,\r\n  dispatchOffLinePage\r\n)(OffLinePage);\r\nexport { OffLinePageContainer };\r\n","const indexing = (...args)=>{\r\n    console.log(args.length)\r\n    try {\r\n        if(args.length !== 2) throw new Error(\"The function takes 2 arguments. First string with key, Second array with objects were have a standard key\");\r\n        const [key, arr] = args; \r\n        console.log(key, arr)\r\n        if (typeof key !== 'string') throw new Error(\"first argument must be string!\");\r\n        if (!(arr instanceof Array)) throw new Error(\"second argument must be array!\");\r\n        if (arr.find(obj=>!obj[key])) throw new Error(\"Duuuuuuddeeee. All the objects in the array must contain the given key\");\r\n        return arr.reduce((acc, cur) => ({ ...acc, [cur[key]]: cur }), {});\r\n    } catch(err) {\r\n        console.error(err.name + \"IndexingFunction: \" + err.message);\r\n    }\r\n}\r\nexport { indexing };\r\n","import socketIOClient from 'socket.io-client';\r\n\r\nconst ENTRY_POINT = 'http://164.90.222.66/';\r\n\r\nconst createSocketConnection = async ({ nameSpace }) => {\r\n  const url = nameSpace ? ENTRY_POINT + nameSpace : ENTRY_POINT;\r\n  console.log('>>>>>>>>>>>>>>>>>>>>>>>createSocketConnection  url', url);\r\n  const socket = socketIOClient(url);\r\n  return await new Promise((resolve) => {\r\n    socket.on('connection', (socketData) => {\r\n      socketData.socket = socket;\r\n      console.log(\r\n        '>>>>>>>>>>>>>>>>>>>>>>>>SERVER!!!!! SOCKET CONNECTION to url,NameSsocketData',\r\n        url,\r\n        socketData\r\n      );\r\n      resolve(socketData);\r\n    });\r\n  });\r\n};\r\n\r\nexport { ENTRY_POINT, createSocketConnection };\r\n","import { ENTRY_POINT } from \"./sockets\";\r\nimport axios from \"axios\";\r\n\r\nconst axiosApi = ({ data, endpoint, headers, method= 'get', token }) => {\r\n\r\n    const URIparameters = method === 'get' && data ? Object.values(data).reduce(( acc, cur)=>acc+encodeURIComponent(cur)+'/' ,'/') : '';\r\n    const encodedUri = `${ENTRY_POINT}/${endpoint}${URIparameters}`;\r\n    const Authorization = token ? `Bearer ${token}` : null;\r\n    const AxiosParameters = [encodedUri];\r\n    if(data) AxiosParameters.push(data);\r\n    if (Authorization || headers) AxiosParameters.push({ headers: { Authorization, ...headers } });\r\n    console.log(\r\n      \"Axios API-- data, endpoint, headers, method, token, AxiosParameters\",\r\n      data,\r\n      endpoint,\r\n      headers,\r\n      method,\r\n      token,\r\n      data,\r\n      AxiosParameters\r\n    );\r\n    return axios[method](...AxiosParameters)\r\n      .then((res) => {\r\n          console.log('AxiosAPI--------202!!!!',res);\r\n          return res.data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"AxioApi----oups! throw error catched\", err.response);\r\n        throw err;\r\n      });\r\n\r\n}\r\n\r\nexport { axiosApi };","import React, {} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { ENTRY_POINT } from '../../../models/onLine/libs';\r\nimport './Static/ranks.scss';\r\n\r\n\r\nconst Ranks = () => {\r\n  const { players, games } = useSelector(state=>({players: state.online.players, games: state.online.games}));\r\n  const enemies= Object.values(games).map(({enemyName})=>enemyName)\r\n  const rankingPlayers = Object.values(players).map(({name, points, avatar, online}) => (\r\n    <div key={name} className={enemies.find(enemy=>enemy===name) ?\"rPlayer enemy\":\"rPlayer\"}>\r\n      <img className=\"avatar\" src={ENTRY_POINT+avatar} alt={name}/>\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"point\">{points}</span>\r\n      <span className={ online ? 'online on' : 'online' }></span>\r\n    </div>\r\n  ));\r\n    return (\r\n      <section className=\"ranks\">\r\n        <h3 className=\"title\">Ranks</h3>\r\n        {rankingPlayers}\r\n      </section>\r\n    );\r\n}\r\n\r\nexport { Ranks };\r\n","import React, {} from 'react';\r\nimport { ENTRY_POINT } from \"../../../models/onLine/libs\";\r\nimport './Static/myStatus.scss';\r\n\r\nconst MyStatus = ({ myStatus,logout, setActiveWindows }) => {\r\n    const loggedOut = ()=> {\r\n      setActiveWindows({ registration: false, mountRegistration: false, loggin: false, mountLoggin: true });\r\n      setTimeout(()=>setActiveWindows({ registration: false, mountRegistration: false, loggin: true, mountLoggin: true }));\r\n      logout();\r\n    }\r\n  if(myStatus) {\r\n    const {name, avatar, points, maxPlayers, maxTime,} = myStatus;\r\n        return (\r\n          <section className=\"myStatus\">\r\n            <h3 className=\"title\">LoggedInStatus</h3>\r\n            <div className=\"statusItem person\">\r\n              <div className=\"name\">{name}</div>\r\n              <img src={ENTRY_POINT + avatar} alt=\"avatar\" className=\"avatar\" />\r\n            </div>\r\n            <div className=\"statusItem points\">{`points: ${points}`}</div>\r\n            <div className=\"statusItem maxTime\">{`maxTime: ${maxTime}`}</div>\r\n            <div className=\"statusItem maxPlayers\">{`maxPlayers: ${maxPlayers}`}</div>\r\n            <div className=\"loggedOut\" onClick={loggedOut}>loggedOut</div>\r\n          </section>\r\n        ); \r\n  }\r\n  return <div>NOT LOGGEDin, GO AWAY</div>;\r\n}\r\n\r\nexport { MyStatus }; ","const SET_LOGGED_STATUS = \"SET_LOGGED_STATUS\";\r\nconst SET_PLAYER_STATUS = \"SET_PLAYER_STATUS\";\r\nconst SET_PLAYERS = \"SET_PLAYERS\";\r\nconst SET_SERVER_NOTIFICATION = \"SET_SERVER_NOTIFICATION\";\r\nconst GET_PLAYER_REQUESTED = \"GET_PLAYER_REQUESTED\";\r\nconst POST_PLAYER_REQUESTED = \"POST_PLAYER_REQUESTED\";\r\nconst SET_SOCKET_DATA = \"SET_SOCKET_DATA\";\r\nconst LOGOUT = \"LOGOUT\";\r\nconst UPDATE_PLAYERS_ONLINE = \"UPDATE_PLAYERS_ONLINE\";\r\nconst CREATE_GAME = \"CREATE_GAME\";\r\nconst UPDATE_GAME = \"UPDATE_GAME\";\r\n\r\n\r\nexport {\r\n  SET_LOGGED_STATUS,\r\n  SET_PLAYER_STATUS,\r\n  SET_PLAYERS,\r\n  SET_SERVER_NOTIFICATION,\r\n  GET_PLAYER_REQUESTED,\r\n  POST_PLAYER_REQUESTED,\r\n  SET_SOCKET_DATA,\r\n  LOGOUT,\r\n  UPDATE_PLAYERS_ONLINE,\r\n  CREATE_GAME,\r\n  UPDATE_GAME\r\n};","import { actionCreator } from \"../../libs/actionCreactor\";\r\nimport {\r\n  SET_LOGGED_STATUS,\r\n  SET_PLAYER_STATUS,\r\n  SET_PLAYERS,\r\n  SET_SERVER_NOTIFICATION,\r\n  GET_PLAYER_REQUESTED,\r\n  POST_PLAYER_REQUESTED,\r\n  SET_SOCKET_DATA,\r\n  LOGOUT,\r\n  CREATE_GAME\r\n} from \"./actionTypes\";\r\n\r\nconst setPlayerLoggedStatus = actionCreator(SET_LOGGED_STATUS, 'loggedIn', 'token');\r\n\r\nconst setPlayerStatus = actionCreator(SET_PLAYER_STATUS, 'payload');\r\n\r\nconst setPlayers = actionCreator(SET_PLAYERS, 'players', 'clear');\r\n\r\nconst setServerNotification = actionCreator(SET_SERVER_NOTIFICATION, 'requesting', 'message', 'success', 'utilities');\r\n\r\nconst getPlayerRequested = actionCreator(GET_PLAYER_REQUESTED, 'name', 'password', 'endpoint', 'method', 'utilities');\r\n\r\nconst postPlayerRequested = actionCreator(POST_PLAYER_REQUESTED, 'data', 'endpoint', 'method', 'headers', 'utilities' );\r\n\r\nconst setSocket = actionCreator(SET_SOCKET_DATA, 'socketData');\r\n\r\nconst logout = actionCreator(LOGOUT);\r\n\r\nconst createGame = actionCreator(CREATE_GAME, 'payload')\r\n\r\n\r\nexport {\r\n  setPlayerLoggedStatus,\r\n  setPlayerStatus,\r\n  setPlayers,\r\n  setServerNotification,\r\n  getPlayerRequested,\r\n  postPlayerRequested,\r\n  setSocket,\r\n  logout,\r\n  createGame\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { setServerNotification } from '../../../models/onLine/actions'\r\n\r\nconst useServerNotification = () => {\r\n  const { utilities, requesting, message, success } = useSelector(state=>state.online.serverNotification, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const setServerNotificationD = (requesting, message, success, utilities) => dispatch(setServerNotification(requesting, message, success, utilities));\r\n  console.log('////////////=>useServerNotification', requesting, message, success);\r\n    const Loader = requesting ? <div key='loader' className='loaderContainer'><div className='loader'></div></div> : null;\r\n    const Message = message && !requesting ? <div key='message' className={ success? \"response\" : \"response fail\" }>{ message }</div> : null;   \r\n    return { utilities, Loader, Message, success, setServerNotificationD };\r\n};\r\n\r\nexport { useServerNotification };","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useServerNotification } from '../Common';\r\nimport \"./Static/registration.scss\";\r\nlet count = 0;\r\nconst Registration = ({ on, setActiveWindows, postPlayerRequested, getPlayerRequested }) => {\r\n       const { register, handleSubmit, errors, reset } = useForm();\r\n       console.log('--------------------Registrattttttiiioooonnnn!!!!!!!!!!!!!', count++);\r\n       const { Loader, Message, success, setServerNotificationD } = useServerNotification();\r\n       const [requestedData, setRequestedData] = useState({file:null, name:null, password: null});\r\n       const goLoggin = ()=>{\r\n        setServerNotificationD(null, '', null, null);\r\n        // Initialization, mount both,  Keep them a little bit initialized for load styles\r\n        setActiveWindows({ registration: true, mountRegistration: true, loggin: false, mountLoggin: true });\r\n        // Now change the active status(on)\r\n        setTimeout(()=>setActiveWindows({ registration: false, mountRegistration: true, loggin: true, mountLoggin: true }));\r\n        // When animation stops unmount\r\n        setTimeout(()=>setActiveWindows({ registration: false, mountRegistration: false, loggin: true, mountLoggin: true }), 800);\r\n       }\r\n       const loggedIn = ()=> {\r\n         const resetAll = ()=>{reset();setRequestedData({});}\r\n         getPlayerRequested(requestedData.name, requestedData.password, 'players', 'get', {cb:resetAll});\r\n       }; \r\n\r\n      const onChangeFile = (e) => {\r\n        console.log(e.target.files[0])\r\n        setRequestedData({files: e.target.files[0]});\r\n      }\r\n      const onSubmit = data => {\r\n        // socket.emit(cs.root.REGISTER, data);\r\n        setRequestedData({...requestedData, name: data.name, password: data.password})\r\n        const formData = new FormData();\r\n        Object.keys(data).forEach(dataKey=>formData.append(dataKey, data[dataKey]))\r\n        formData.append(\"avatar\", requestedData.files);\r\n        const headers = { \"content-type\": \"multipart/form-data\"};\r\n        postPlayerRequested(formData, 'players', 'post', headers, {});\r\n      };\r\n  const  loggin =  !Loader && success ? <div key='loggin' onClick={ loggedIn } className='logginButton'>Loggin</div> : null;\r\n  const  goLogginDiv =!Loader && success ? null : <div className='goLoggin' onClick={ goLoggin }>GoLoggin</div>;\r\n  return (\r\n    <section className={on ? \"registration on\" : \"registration\"}>\r\n      <h3 className=\"title\">Register</h3>\r\n      { <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"inputField\">\r\n          <input\r\n            className={errors.name ? \"errorInput\" : null}\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            ref={register({\r\n              required: true,\r\n              pattern: /^([a-zA-Z0-9_-]){3,8}$/,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <span className=\"error\">\r\n              name is required Please enter Alpanumeric Letters with length 3-8\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <input\r\n            className={errors.password ? \"errorInput\" : null}\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            ref={register({\r\n              required: true,\r\n              pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n            })}\r\n          />\r\n          {errors.password && (\r\n            <span className=\"error\">\r\n              Password must contain\r\n              <br />\r\n              1)At least 1 lowercase alphabetical character\r\n              <br />\r\n              2)at least 1 uppercase alphabetical character\r\n              <br />\r\n              3)at least 1 numeric character\r\n              <br />\r\n              4)at least one special character(!@#$%^&*)\r\n              <br />\r\n              5)at least 8 characters\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <input\r\n            className={errors.maxPlayers ? \"errorInput\" : null}\r\n            name=\"maxPlayers\"\r\n            placeholder=\"players Limmit (2-9)\"\r\n            ref={register({ required: true, pattern: /^[2-9]$/ })}\r\n          />\r\n          {errors.maxPlayers && (\r\n            <span className=\"error\">\r\n              players Limmit is required Please enter a number 2-8\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <input\r\n            className={errors.maxTime ? \"errorInput\" : null}\r\n            name=\"maxTime\"\r\n            placeholder=\"time Limmit(2-9)'\"\r\n            ref={register({ required: true, pattern: /^[2-9]$/ })}\r\n          />\r\n          {errors.maxTime && (\r\n            <span className=\"error\">\r\n              time Limmit is required Please enter a number 2-9\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <div className=\"avatarButton\">\r\n            <label className=\"avatarLabel\">\r\n              {\" \"}\r\n              Upload Avatar\r\n              <input\r\n                className=\"customFileInput\"\r\n                type=\"file\"\r\n                name=\"avatar\"\r\n                onChange={onChangeFile}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <input className=\"submit\" type=\"submit\" />\r\n      </form>\r\n      }\r\n      {goLogginDiv}\r\n      <div className=\"responseContainer\">{[Message, loggin]} </div>\r\n      { Loader }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { Registration };\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useServerNotification } from '../Common';\r\nimport \"./Static/loggin.scss\";\r\nlet count =0;\r\nconst Loggin = ({ on, setActiveWindows, getPlayerRequested }) => {\r\n  console.log('--------------------Logginnnnnnnnnnnn!!!!!!!!!!!!!', count++);\r\n  const { Loader, Message, setServerNotificationD } = useServerNotification();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const goRegistration = ()=>{\r\n    setServerNotificationD(null, \"\", null, null);\r\n    // Initialization, mount both,  Keep them a little bit initialized for load styles\r\n    setActiveWindows({ registration: false, mountRegistration: true, loggin: false, mountLoggin: true });\r\n    // Now change the active status(on)\r\n    setTimeout(()=>setActiveWindows({ registration: true, mountRegistration: true, loggin: false, mountLoggin: true }));\r\n    // When animation stops u\r\n    setTimeout(()=>setActiveWindows({ registration: true, mountRegistration: true, loggin: false, mountLoggin: false }), 800);\r\n  }\r\n  // Go player status\r\n  // Go to player status and reset form\r\n  // const getAllPlayers = (tokken) =>()\r\n    // axios.get(ENTRY_POINT+'/players' , { headers: { Authorization:`Bearer ${tokken}`} })\r\n    // .then(res=> {\r\n    //   console.log('aaaallllll',res.data)\r\n    // })\r\n    // .catch(err=>{\r\n    //   console.log('errrrr',err);\r\n    // })\r\n  const onSubmit = data => {\r\n    const { name, password } = data;\r\n    const endpoint = 'players';\r\n    const method = 'get'\r\n    const utilities = {location:'loggin', cb: reset};\r\n    getPlayerRequested(name,password,endpoint,method,utilities);\r\n  };\r\n  return (\r\n    <section className={on ? \"login on\" : \"login\"}>\r\n      <h3 className=\"title\">Loggin</h3>\r\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"inputField\">\r\n          <input name=\"name\" placeholder=\"name\" ref={register({required: true})}/>\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <input name=\"password\" placeholder=\"password\" ref={register({ required: true })}/>\r\n        </div>\r\n        <input className=\"submit\" type=\"submit\" />\r\n      </form>\r\n      <div className='goRegistration' onClick={ goRegistration }>GoRegistration</div>\r\n      { [Message, Loader] }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { Loggin };","import React from 'react';\r\nconst TimeRoom = (roomPlayers, onClickPlayer, enemies) => {\r\n    const tPlayers = roomPlayers.map(\r\n      ({name})=><div key={name}\r\n                     data-key={name}\r\n                     onClick={onClickPlayer}\r\n                     className={enemies.find(enemy=>enemy===name) ? \"tPlayer enemy\" : \"tPlayer\"}>{name}</div>\r\n      );\r\n return <div key={roomPlayers[0].maxTime} className=\"timeRoom\">\r\n    <div className=\"timeLimit\">{roomPlayers[0].maxTime}</div>\r\n    { tPlayers }\r\n  </div>;\r\n};\r\nexport { TimeRoom };","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createGame } from '../../../models/onLine/actions';\r\nimport groupBy from \"lodash/groupBy\";\r\nimport { TimeRoom } from './TimeRoom';\r\nimport './Static/liveOverview.scss';\r\n\r\nconst LiveOverview = () => {\r\n  const { players, myPlayerName, games } = useSelector(state => ({ players: state.online.players, games: state.online.games, myPlayerName: state.online.player.status.name}));\r\n  const dispatch = useDispatch();\r\n  const enemies = Object.values(games).map(({ enemyName }) => enemyName);\r\n  const onlinePlayers = Object.values(players).reduce((acc,player)=>player.online && player.name !== myPlayerName ? [...acc, player]:acc,[]);\r\n  const groupByMaxTimePlayers = groupBy(onlinePlayers, ({maxTime})=>maxTime);\r\n  const onClickPlayer = (e)=> dispatch(createGame({player1: myPlayerName, player2:e.target.getAttribute('data-key')}));\r\n  const timeRooms = Object.values(groupByMaxTimePlayers).reduce(\r\n    (acc, roomPlayers) => [...acc, TimeRoom(roomPlayers, onClickPlayer, enemies)],\r\n    []\r\n  );\r\n  return  <section className=\"liveOverview\">\r\n      <h3 className=\"title\">Live Overview</h3>\r\n      <div className=\"status options\">\r\n        Total active players, options, others\r\n      </div>\r\n      <div className=\"timeRooms\">\r\n        { timeRooms }\r\n      </div>\r\n    </section>\r\n};\r\n\r\nexport { LiveOverview };\r\n","import React, { useState } from 'react';\r\nimport { Ranks, MyStatus, Registration, Loggin, LiveOverview } from './';\r\nimport './Static/controlPanel.scss';\r\n\r\n//actionFuntions\r\n\r\n//Component\r\nconst ControlPanel = ({  ranks, player, getPlayerRequested, postPlayerRequested, logout}) => {\r\n  const [ activeWindows, setActiveWindows ] = useState({registration:false, mountRegistration:false,loggin:true, mountLoggin:true});\r\n  return (\r\n    <section className=\"controlPanel\">\r\n      <Ranks ranks={ranks} />\r\n      <section className=\"account\">\r\n        <MyStatus\r\n          myStatus={player.loggedStatus.loggedIn ? player.status : null}\r\n          setActiveWindows={setActiveWindows}\r\n          logout={logout}\r\n        />\r\n        {\r\n        activeWindows.mountRegistration &&\r\n        <Registration\r\n          on={!player.loggedStatus.loggedIn && activeWindows.registration}\r\n          setActiveWindows={setActiveWindows}\r\n          postPlayerRequested={postPlayerRequested}\r\n          getPlayerRequested={getPlayerRequested}\r\n        />\r\n        }\r\n        {\r\n        activeWindows.mountLoggin &&\r\n        <Loggin\r\n          on={!player.loggedStatus.loggedIn && activeWindows.loggin}\r\n          setActiveWindows={setActiveWindows}\r\n          getPlayerRequested={getPlayerRequested}\r\n        />\r\n        }\r\n      </section>\r\n      <LiveOverview/>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { ControlPanel };","import React, {useEffect} from 'react';\r\nimport { ENTRY_POINT } from \"../../../models/onLine/libs\";\r\n\r\n\r\nconst Game = ({myName, player1, player2, squares, turn, nameSpace, socketData, winnerData:{ winner, winnerLine }}) => {\r\n  useEffect(()=>{\r\n    if(myName === turn){\r\n     const losePoints = setInterval(()=>console.log('lose points'), player1.maxTime * 1000);\r\n     return ()=> clearTimeout(losePoints);\r\n    }\r\n  },[turn]);\r\n  const onClickSquare = (e)=>{\r\n    if(myName !== turn || e.target.innerText || winner) return;\r\n    e.target.classList.add('mySquare')\r\n    const squareIndex = e.target.getAttribute(\"data-squareindex\");\r\n    socketData.socket.emit(socketData.cs.root.UPDATE_GAME,{squareIndex})\r\n  }\r\n  let firstPlayerClassName = player1.name === myName ? \"player myPlayer\" : \"player enemy\";\r\n  firstPlayerClassName += turn === player1.name ? \" turn\" : \"\"; \r\n  let secondPlayerClassName = player2.name === myName ? \"player myPlayer\" : \"player enemy\";\r\n  secondPlayerClassName += turn === player2.name ? \" turn\" : \"\"; \r\n  const playerState = winner ? winner === myName ? 'won' : 'lost' : '';\r\n return (\r\n  <div className={\"game \"+playerState}>\r\n     <div className=\"players\">\r\n       <span\r\n         className={firstPlayerClassName}\r\n       >\r\n         <span>{player1.name}</span>\r\n         <span>{player1.points}</span>\r\n       </span>\r\n       <img className=\"player enemysAvatar\" src={ myName !== player1.name ? ENTRY_POINT+player1.avatar : ENTRY_POINT+player2.avatar  } alt=\"\"/>\r\n       <span\r\n         className={secondPlayerClassName}\r\n       >\r\n         <span>{player2.name}</span>\r\n         <span>{player2.points}</span>\r\n       </span>\r\n     </div>\r\n     <div className=\"gameBoard\">\r\n       <div className=\"boardRow\">\r\n         <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 0) !== undefined ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='0' onClick={onClickSquare}>\r\n            {squares[0]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 1) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='1' onClick={onClickSquare}>\r\n            {squares[1]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 2) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='2' onClick={onClickSquare}>\r\n            {squares[2]}\r\n          </button>\r\n       </div>\r\n       <div className=\"boardRow\">\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 3) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='3' onClick={onClickSquare}>\r\n            {squares[3]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 4) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='4' onClick={onClickSquare}>\r\n            {squares[4]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 5) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='5' onClick={onClickSquare}>\r\n            {squares[5]}\r\n          </button>\r\n       </div>\r\n       <div className=\"boardRow\">\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 6) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='6' onClick={onClickSquare}>\r\n            {squares[6]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 7) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='7' onClick={onClickSquare}>\r\n            {squares[7]}\r\n          </button>\r\n          <button className={winnerLine ? winnerLine.find(squareIndex=>squareIndex === 8) ?\r\n            \"squareW squareA square \" + playerState : \"squareA square\" :\"square\"} data-squareindex='8' onClick={onClickSquare}>\r\n            {squares[8]}\r\n          </button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n );\r\n};\r\n\r\nexport { Game };\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Game } from './Game';\r\nimport './static/games.scss'\r\n\r\nconst Games = () => {\r\n    const { games } = useSelector(state=>({games:Object.values(state.online.games)}));\r\n    const gamesEls = games.map(game=><Game key={game.name} {...game}/>);\r\n    return (\r\n      <div className=\"gamesContainer\">\r\n          {gamesEls}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport { Games };\r\n","import { combineReducers } from 'redux';\r\nimport { SET_LOGGED_STATUS, SET_PLAYER_STATUS, SET_PLAYERS, SET_SERVER_NOTIFICATION, SET_SOCKET_DATA, UPDATE_PLAYERS_ONLINE, UPDATE_GAME } from './actionTypes';\r\n\r\nconst loggedStatus = (state={loggedIn:false, token:null }, action) => {\r\n    switch(action.type) {\r\n        case SET_LOGGED_STATUS:\r\n            return {...state, loggedIn:action.loggedIn, token: action.token};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst status = (state={}, action) => {\r\n    switch(action.type) {\r\n        case SET_PLAYER_STATUS:\r\n            return {...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst socketData = (state={}, action) => {\r\n    switch(action.type) {\r\n        case SET_SOCKET_DATA:\r\n            return {...state, ...action.socketData};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst players = (state={}, action) => {\r\n    switch(action.type) {\r\n        case SET_PLAYERS:\r\n            if(action.clear) return {};\r\n            return {...state, ...action.players};\r\n        case UPDATE_PLAYERS_ONLINE:\r\n            const newState = {...state};\r\n            Object.keys(newState)\r\n            .forEach(playerName=> newState[playerName].online= action.payload[playerName] ? true : false);         \r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst serverNotification = ( state={ requesting: null, message: null, success: null, utilities: {}}, action) => {\r\n    switch(action.type) {\r\n        case SET_SERVER_NOTIFICATION:\r\n            const { requesting, utilities } = action;\r\n            let {  message, success } = action;\r\n            message = message !==null ? message : state.message;\r\n            success = success !== null ? success : state.success;\r\n            return { requesting, message, success, utilities };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst games = (state={}, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_GAME: \r\n         console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>UPDATE_GAME', action);\r\n         return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Old way\r\n// const player = ( state = { \r\n//     loggedStatus: loggedStatusState(undefined, {}),\r\n//     status: statusState(undefined, {})\r\n// }, action) => {\r\n//     switch (action.type) {\r\n//       case SET_LOGGED_STATUS:\r\n//         return { ...state, loggedStatus: loggedStatusState(state.loggedIn, action) };\r\n//       case SET_PLAYER_STATUS:\r\n//         return { ...state, status: statusState(state.status, action) };\r\n//       default:\r\n//         return state;\r\n//     }\r\n// }\r\n\r\nconst player = combineReducers({loggedStatus, status});\r\nconst online = combineReducers({ player, players, serverNotification, socketData, games });\r\nexport { online };","import { take, put, call, apply, delay, fork } from 'redux-saga/effects';\r\nimport { UPDATE_PLAYERS_ONLINE, UPDATE_GAME  } from '../../models/onLine/actionTypes'\r\nimport { createSocketConnection } from \"../onLine/libs\";\r\nimport { eventChannel } from 'redux-saga';\r\n\r\nfunction createSocketChannel(socketData) {\r\n  const { socket, ss, cs } = socketData;\r\n  return eventChannel(emit => {\r\n    const updatePlayers = ({onlinePlayers}) => {\r\n      emit({ type: UPDATE_PLAYERS_ONLINE, payload: onlinePlayers });\r\n    }\r\n   async function createGame(nameSpace){\r\n      console.log('>>>>>>>>>SAGA-------CREATE-SOCKET-CHANEL___createGame-from ss', nameSpace);\r\n      const socketData = await createSocketConnection({nameSpace});\r\n      socketData.ss = ss;\r\n      socketData.cs = cs;\r\n      emit({type: 'WATCH_SOCKET_GAME', payload: socketData})\r\n    };\r\n    socket.on(ss.root.UPDATE_PLAYERS, updatePlayers);\r\n    socket.on(ss.root.CREATE_GAME, createGame);\r\n    const unsubscribe = () => {\r\n    }\r\n    return unsubscribe;\r\n  })\r\n}\r\n\r\n// function* pong(socket) {\r\n//   yield apply(socket, socket.emit, ['pong']) // call `emit` as a method with `socket` as context\r\n// }\r\n\r\nfunction* watchSocketServer(socketData, {status, token}) {\r\n    const socketChannel = yield call(createSocketChannel, socketData);\r\n    socketData.socket.emit(socketData.cs.root.UPDATE_PLAYERS, {\r\n    message:\r\n        \"Dude!!! I am a React Client IN SAGA CHANELL!! and i am connected to you!!!!Take my name,my password and my token\",\r\n    data: { ...status },\r\n    });\r\n\r\n  while (true) {\r\n    try {\r\n      const {type, payload} = yield take(socketChannel)\r\n      yield put({ type, payload })\r\n    //   yield fork(pong, socket)\r\n    } catch(err) {\r\n      console.error('socket error:', err)\r\n      // socketChannel is still open in catch block\r\n      // if we want end the socketChannel, we need close it explicitly\r\n      // socketChannel.close()\r\n    }\r\n  }\r\n}\r\n\r\n//--------------GAME CHANNEL------------------------\r\n\r\nfunction createSocketChannelGame(socketData) {\r\n  const { socket, ss } = socketData;\r\n  return eventChannel((emit) => {\r\n\r\n    const updateGame = (game) => {\r\n      for (var key in game) {\r\n        game[key].socketData = socketData;\r\n        break;\r\n      }\r\n      emit({ type: UPDATE_GAME, payload: game });\r\n    };\r\n\r\n    socket.on(ss.root.UPDATE_GAME, updateGame);\r\n    const unsubscribe = () => {};\r\n    return unsubscribe;\r\n  });\r\n}\r\n\r\n// function* pong(socket) {\r\n//   yield apply(socket, socket.emit, ['pong']) // call `emit` as a method with `socket` as context\r\n// }\r\n\r\nfunction* watchSocketServerGame(socketData) {\r\n\r\n  const socketChannelGame = yield call(createSocketChannelGame, socketData);\r\n  while (true) {\r\n    try {\r\n      const { type, payload } = yield take(socketChannelGame);\r\n      yield put({ type, payload });\r\n    } catch (err) {\r\n      console.error(\"socket error:\", err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport { watchSocketServer, watchSocketServerGame };","import { GET_PLAYER_REQUESTED, POST_PLAYER_REQUESTED, LOGOUT, CREATE_GAME } from './actionTypes';\r\nimport { setServerNotification,setPlayerStatus, setPlayerLoggedStatus, setPlayers, setSocket } from './actions';\r\nimport { select, call, put, takeLatest, take, all, fork } from 'redux-saga/effects';\r\nimport { axiosApi, indexing, createSocketConnection } from './libs';\r\nimport { watchSocketServer, watchSocketServerGame } from './sagaChannels';\r\n\r\n// Worker, Wathcer getPlayer saga\r\nfunction* getPlayer(action) {\r\n    const { name, password, endpoint, method, utilities } = action;\r\n    const data = { name, password };\r\n    yield put(setServerNotification(true, null, null, utilities))\r\n    try { \r\n      const  {message, token, status} = yield call(axiosApi, { method, endpoint, data });\r\n      utilities.loggedIn = true;\r\n      // get All players\r\n      const [{ allPlayers }, socketData] = yield all([\r\n          call(axiosApi, {method:'get', endpoint:'players', token}),\r\n          call( createSocketConnection, {name, password, token} )\r\n      ]);\r\n      yield fork(watchSocketServer, socketData, {status, token});\r\n      if(utilities.cb) utilities.cb();\r\n      yield all([\r\n          put(setServerNotification(false, message, true, utilities )),\r\n          put(setPlayerLoggedStatus(true, token)),\r\n          put(setPlayerStatus(status)),\r\n          put(setPlayers(indexing('name',allPlayers))),\r\n          put(setSocket(socketData))\r\n      ]);\r\n    }catch(err) {\r\n    const { message } = err.response ? err.response.data : {message:'unknown error'};\r\n    yield put(setServerNotification(false, message, false, utilities ));\r\n    }\r\n}\r\n\r\nfunction* watchGetPlayer() {\r\n    yield takeLatest( GET_PLAYER_REQUESTED, getPlayer);\r\n}\r\n\r\n// Worker, Wathcer postPlayer saga\r\nfunction* postPlayer(action) {\r\n    const { endpoint, data, method, utilities, headers } = action;\r\n    console.log('****************PostPlayerWorker Action',action);\r\n    yield put(setServerNotification(true, null, null, utilities))\r\n    try {\r\n        const { message } = yield call(axiosApi, {method, endpoint, data, headers});\r\n       yield put(setServerNotification(false, message, true, {logginSuccess:true}));\r\n    }catch(err) {\r\n        const { message } = err.response.data;\r\n        yield put(setServerNotification(false, message, false, utilities ));\r\n    }\r\n}\r\n\r\nfunction* watchPostPlayer() {\r\n    yield takeLatest( POST_PLAYER_REQUESTED, postPlayer);\r\n}\r\n      \r\n      \r\nfunction* logout() {\r\n    while( yield take(LOGOUT) ){\r\n        console.log(\"loggoutTriggeeerrreeeddd\")\r\n    const socketData = yield select(state=>state.online.socketData);\r\n    socketData.socket.emit(socketData.cs.root.MANULLY_DISCONNECT);\r\n        yield all([\r\n            put(setPlayerLoggedStatus(false, null)),\r\n            put(setPlayerStatus(null)),\r\n            put(setServerNotification(null, \"\", null, null)),\r\n            put(setPlayers({}, true))\r\n        ])\r\n    }\r\n}\r\n\r\nfunction* createGame() {\r\n    while( true ){\r\n        const action = yield take(CREATE_GAME);\r\n        const socketData = yield select(state=>state.online.socketData);\r\n        console.log(\"CREATE_GAME\", action);\r\n        socketData.socket.emit(socketData.cs.root.CREATE_GAME, { ...action.payload });      \r\n    }\r\n}\r\n\r\nfunction* createWatcherChanelGame() {\r\n    while( true ) {\r\n        const {payload} = yield take('WATCH_SOCKET_GAME');\r\n        yield fork(watchSocketServerGame, payload)\r\n    }\r\n}\r\n\r\n// RootSaga\r\nfunction* rootSaga() {\r\n  yield all([ watchGetPlayer(), watchPostPlayer(), logout(), createGame(), createWatcherChanelGame()])\r\n}\r\n\r\nexport { rootSaga };","import React, { useState, useEffect  } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ControlPanel } from \"./ControlPanel\";\r\nimport { Games } from './Games';\r\nimport { getPlayerRequested, postPlayerRequested, logout } from \"../../models/onLine\";\r\nimport './Static/onlinePage.scss';\r\n\r\n\r\n//Component\r\nconst OnLinePage = ({ player, getPlayerRequested, postPlayerRequested, logout }) => {\r\n  return (\r\n    <section className=\"onLinePage\">\r\n      <ControlPanel\r\n        player={player}\r\n        getPlayerRequested={getPlayerRequested}\r\n        postPlayerRequested={postPlayerRequested}\r\n        logout={logout}\r\n      />\r\n      <Games />\r\n    </section>\r\n  );\r\n};\r\n\r\n//ReduxState&Dispatch\r\nconst stateOnLinePage = ({ online:{ player, socketData } }) => {\r\n  return { player, socketData };\r\n};\r\nconst OnLinePageContainer = connect(\r\n  stateOnLinePage,\r\n  { getPlayerRequested, postPlayerRequested, logout }\r\n)(OnLinePage);\r\nexport { OnLinePageContainer };\r\n","import React, { useState } from 'react';\r\nimport { OffLinePageContainer } from './OffLinePage';\r\nimport { OnLinePageContainer } from \"./OnLinePage\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function HomePageContainer() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <nav className=\"modes\">\r\n            <Link className=\"modeLink\" to=\"/offLine\">OffLineMode</Link>\r\n            <Link className=\"modeLink\" to=\"/onLine\">onLineMode</Link>\r\n          </nav>\r\n        </Route>\r\n        <Route exact path=\"/offLine\">\r\n          <OffLinePageContainer />\r\n        </Route>\r\n        <Route path=\"/onLine\" component={OnLinePageContainer}>\r\n          <OnLinePageContainer />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport { HomePageContainer };","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './static/main.scss';\r\nimport { HomePageContainer } from './TicToe/';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { games } from \"./models/tic-tac-toe/\";\r\nimport { online, rootSaga } from \"./models/onLine/\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst fullReducer = combineReducers({ online, games });\r\nconst gameStore = createStore(\r\n    fullReducer,\r\n    compose(\r\n     applyMiddleware(sagaMiddleware),\r\n     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  );\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={gameStore}>\r\n    <HomePageContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}